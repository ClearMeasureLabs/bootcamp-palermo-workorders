using AngleSharp.Dom;
using ClearMeasure.Bootcamp.Core.Model.StateCommands;
using ClearMeasure.Bootcamp.UI.Shared.Pages;

namespace ClearMeasure.Bootcamp.AcceptanceTests.WorkOrders;

public class WorkOrderReopenTests : AcceptanceTestBase
{
    [Test]
    public async Task ShouldAssignAndCancel()
    {
        await LoginAsCurrentUser();

        var order = await CreateAndSaveNewWorkOrder();
        order = await ClickWorkOrderNumberFromSearchPage(order);
        order = await AssignExistingWorkOrder(order, CurrentUser.UserName);
        order = await ClickWorkOrderNumberFromSearchPage(order);

        order = await BeginExistingWorkOrder(order);
        order = await ClickWorkOrderNumberFromSearchPage(order);

        order.Title = "Title";
        order.Description = "Description";
        order = await CompleteExistingWorkOrder(order);
        order = await ClickWorkOrderNumberFromSearchPage(order);
        var button = Page.GetByTestId(nameof(WorkOrderManage.Elements.CommandButton) +
                                      CompletedToInProgressCommand.Name);
        await Expect(button).ToHaveClassAsync(new[] { "btn btn-success" });
        await Click(nameof(WorkOrderManage.Elements.CommandButton) +
                    CompletedToInProgressCommand.Name);
        order = await ClickWorkOrderNumberFromSearchPage(order);

        await Expect(Page.GetByTestId(nameof(WorkOrderManage.Elements.Status)))
            .ToHaveTextAsync(WorkOrderStatus.InProgress.FriendlyName);

    }
}